###
# Usage: /msg botnick voice [<channel>] [<nick1> <nick2> <nick3> ..]
###

### VOICE
bind msg - voice {msg_error msg_voice}
bind pub - $set(cmd)voice {pub_error pub_voice}

### CHANNEL:
proc pub_voice {nick uhost handle chan text} {
  if {[validuser $handle]} {
    all_voice c $nick $uhost $handle $chan $text
  }
}
    
### QUERY:
proc msg_voice {nick uhost handle text} {
  if {![validuser $handle]} {
    return
  } elseif {[lindex $text 0] == ""} {
    notice $nick $handle "Invalid request: Wheres the channel name?"
  } elseif {![string match #* [lindex $text 0]]} {
    notice $nick $handle "Invalid request: [lindex $text 0] is not a channel"
  } else {
    all_voice m $nick $uhost $handle [lindex $text 0] [lrange $text 1 end]
  }
}

### MAIN:
proc all_voice {type nick uhost handle chan text} {
  chan_settings voice $type $nick $uhost $handle $chan $text
  global set botnick
  if {![auth_check $nick $uhost $handle $chan] || [level $handle $chan] == "0"} {
    return
  } elseif {![validchan $chan]} {
    notice $nick $handle "Invalid request: $chan is not a valid channel"
  } elseif {[string tolower $type] == "c" && [chaninfo $chan nochanmsg]} {
    notice $nick $handle "`commands have been disabled for $chan"
  } elseif {[level $handle $chan] < [readfile $set(script.dir)/$set(com.file) voice]} {
    notice $nick $handle "Your level of [level $handle $chan] is less then the required [readfile $set(script.dir)/$set(com.file) voice] for this command"
  } elseif {[lindex $text 0] == ""} {
    pushmode $chan +v $nick
    putcmdlog "> !$handle! ($nick!$uhost) VOICE\[$type\] ($chan)"
  } else {
    set n ""
    foreach u $text {
      if {[isvoice $u $chan]} {
        continue
      } else {
        set n $n,$u
        pushmode $chan +v $u
      }
    }
    notice $n $n "You were voiced on $chan by $nick \[$handle\]"
    putcmdlog "> !$handle! ($nick!$uhost) VOICE\[$type\] ($chan): $text"
  }
}

###
# Usage: /msg botnick command [<channel>]
###

### COMMANDS:
bind msg - commands "msg_error msg_commands"
bind pub - $set(cmd)commands "pub_error pub_commands"

### CHANNEL:
proc pub_commands {nick uhost handle chan text} {
  if {[validuser $handle]} {
    all_commands c $nick $uhost $handle $chan $text
  }
}

### QUERY:
proc msg_commands {nick uhost handle text} {
  if {![validuser $handle]} {
    return
  } elseif {[lindex $text 0] == ""} {
    notice $nick $handle "Invalid request: Wheres the channel name?"
  } elseif {![string match #* [lindex $text 0]]} {
    notice $nick $handle "Invalid request: [lindex $text 0] is not a channel"
  } else {
    all_commands m $nick $uhost $handle [lindex $text 0] [lrange $text 1 end]
  }
}

### MAIN:
proc all_commands {type nick uhost handle chan text} {
  global set botnick
  chan_settings commands $type $nick $uhost $handle $chan $text
  if {[level $handle $chan] == "0" || ![auth_check $nick $uhost $handle $chan] || [backup_check $chan]} {
    return
  } elseif {![validchan $chan]} {
    notice $nick $handle "Invalid request: $chan is not a valid channel"
  } elseif {[string tolower $type] == "c" && [changet $chan nochanmsg]} {
    notice $nick $handle "$set(cmd)commands have been disabled for $chan"
  } elseif {[level $handle $chan] < [comget $chan commands]} {
    notice $nick $handle "Your level of [level $handle $chan] is less then the required [comget $chan commands] for this command"
  } elseif {![file isfile $set(data.dir)/[file_change $chan].com]} {
    putlog "> Could not locate commands file for $chan.. creating"
    commands_create $chan
  } else {
    foreach tmp_com [listfile $set(data.dir)/[file_change $chan].com] {
      set tmp_lvl [comget $chan $tmp_com]
      if {![info exists tmp($tmp_lvl)]} {
        set tmp($tmp_lvl) $tmp_com
      } else {
        set tmp($tmp_lvl) "$tmp($tmp_lvl) $tmp_com"
      }
    }
    set cnt 200
    notice $nick $handle "\002***\002 Channel commands on $chan for $handle \[Level: [level $handle $chan]\] \002***\002"
    while {$cnt >= "0"} {
      if {[info exists tmp($cnt)] && [level $handle $chan] >= $cnt} {
        notice $nick $handle "[align $cnt 3 " " R]: $tmp($cnt)"
      }
      set cnt [expr $cnt - 1]
    }
    notice $nick $handle "\002***\002 End of List \002***\002"
    putcmdlog "> !$handle! ($nick!$uhost) COMMANDS\[$type\] ($chan)"
  }
}

###
# Usage: /msg botnick set [<channel>] <keeptopic|mode|nonote|oprestrict|restrict|mustid|tellpeak|tellset|telladd|telldel|nochanmsg|funmsg|url|noquota|log|owner|address> <newvalue>
###

### SET:
bind msg - set "msg_error msg_set"
bind pub - $set(cmd)set "pub_error pub_set"

### CHANNEL:
proc pub_set {nick uhost handle chan text} {
  if {[validuser $handle]} {
    all_set c $nick $uhost $handle $chan $text
  }
}

### QUERY:
proc msg_set {nick uhost handle text} {
  if {![validuser $handle]} {
    return
  } elseif {[lindex $text 0] == ""} {
    notice $nick $handle "Invalid request: Wheres the channel name?"
  } elseif {![string match #* [lindex $text 0]]} {
    notice $nick $handle "Invalid request: [lindex $text 0] is not a channel"
  } else {
    all_set m $nick $uhost $handle [lindex $text 0] [lrange $text 1 end]
  }
}

### MAIN:
proc all_set {type nick uhost handle chan text} {
  global set botnick
  chan_settings set $type $nick $uhost $handle $chan $text
  if {[level $handle $chan] == "0" || ![auth_check $nick $uhost $handle $chan] || [backup_check $chan]} {
    return
  } elseif {![validchan $chan]} {
    notice $nick $handle "Invalid request: $chan is not a valid channel"
  } elseif {[string tolower $type] == "c" && [changet $chan nochanmsg]} {
    notice $nick $handle "$set(cmd)commands have been disabled for $chan"
  } elseif {[level $handle $chan] < [comget $chan set]} {
    notice $nick $handle "Your level of [level $handle $chan] is less then the required [comget $chan set] for this command"
  } elseif {$text == ""} {
    notice $nick $handle "Invalid request: What setting are you changing?"
  } elseif {[lindex $text 1] == ""} {
    notice $nick $handle "Invalid request: What are you changing this option to?"
  } else {
    set option [string tolower [lindex $text 0]]
    set value [string tolower [lindex $text 1]]
    regsub -all \\n $value "\\n" value
    regsub -all \\r $value "\\r" value
    if {$option == "funmsg"} {
      set optionmsg "Fun Messages"
    } elseif {$option == "log"} {
      set optionmsg "Report Log"
    } else {
      set optionmsg $option
    }
    if {($option == "keeptopic" || $option == "nonote" || $option == "restrict") && ($value < "0" || $value > "200")} {
      notice $nick $handle "Invalid request: $value"
    } elseif {($option == "keeptopic" || $option == "nonote" || $option == "restrict") && $value > [level $handle $chan]} {
      notice $nick $handle "Invalid request: Can't set a level higher than your own"
    } elseif {($option == "keeptopic" || $option == "nonote" || $option == "restrict") && [changet $chan $option] > [level $handle $chan]} {
      notice $nick $handle "The current level of [changet $chan $option] for $optionmsg exceeds your level of [level $handle $chan]"
    } elseif {$option == "keeptopic" || $option == "nonote" || $option == "restrict"} {
      chanset $chan $option $value
      notice $nick $handle "Setting for '$optionmsg' now set to $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {($option == "mustid" || $option == "tellpeak" || $option == "tellset" || $option == "telladd" || $option == "telldel" || $option == "tellsetu" || $option == "nochanmsg" || $option == "funmsg") && ($value == "on" || $value == "off")} {
      chanset $chan $option [change $value 10]
      notice $nick $handle "Setting for '$optionmsg' now set to $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "mustid" || $option == "tellpeak" || $option == "tellset" || $option == "telladd" || $option == "telldel" || $option == "tellsetu" || $option == "nochanmsg" || $option == "funmsg"} {
      notice $nick $handle "Invalid request: $value"
    } elseif {$option == "url"} {
      chanset $chan $option $value
      notice $nick $handle "Setting for 'URL' now set to $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "log" && [level $handle $chan] < "200"} {
      notice $nick $handle "Invalid request: Only owners (level 200+) are able change the log reporting setting"
    } elseif {$option == "log" && [nickinfo [lindex [changet $chan owner] 0] email] == "0"} {
      notice $nick $handle "Invalid request: [lindex [changet $chan owner] 0] (first owner) hasn't set an e-mail address, cannot enable report log setting"
    } elseif {$option == "log" && ($value == "on" || $value == "off")} {
      chanset $chan reportlog [change $value 10]
      notice $nick $handle "Setting for '$optionmsg' now set to $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "log"} {
      notice $nick $handle "Invalid request: $value"
    } elseif {($option == "quota" || $option == "banquota") && ($value == "off" || $value == "0")} {
      chanset $chan $option 0
      notice $nick $handle "Setting for '$optionmsg' now set to off for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {($option == "quota" || $option == "banquota") && (![isnum $value] || $value < "1") || [string match *.* $value]} {
      notice $nick $handle "Invalid request: $value"
    } elseif {$option == "quota" || $option == "banquota"} {
      chanset $chan $option $value
      notice $nick $handle "Setting for '$optionmsg' now set to $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "owner"} {
      chanset $chan $option $value
      notice $nick $handle "Setting for '$optionmsg' now set to $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "access" && ($value < "0" || $value > "200")} {
      notice $nick $handle "Invalid request: $value"
    } elseif {$option == "access" && $value > [level $handle $chan]} {
      notice $nick $handle "Invalid request: Can't set a level higher than your own"
    } elseif {$option == "access" && [lindex $text 2] == ""} {
      chanset $chan accessall "$value 5"
      notice $nick $handle "Setting for 'access limit' now set to $value 5 for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "access" && (![isnum [lindex $text 2]] || [string match *.* $value])} {
      notice $nick $handle "Invalid request: $value"
    } elseif {$option == "access"} {
      chanset $chan accessall "$value [lindex $text 2]"
      notice $nick $handle "Setting for 'access limit' now set to $value [lindex $text 2] for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "hash" && (![isnum $value] || [string match *.* $value])} {
      notice $nick $handle "Invalid request: $value"
    } elseif {$option == "hash"} {
      chanset $chan hash $value
      notice $nick $handle "Setting for '$optionmsg' now set to $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "oprestrict" && $value == "on"} {
      chanset $chan $option 100
      notice $nick $handle "Setting for '$optionmsg' now set to 100 for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "oprestrict" && $value == "off"} {
      chanset $chan $option 0
      notice $nick $handle "Setting for '$optionmsg' now set to 0 for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "oprestrict" && ($value > "200" || $value < "0")} {
      notice $nick $handle "Invalid request: $value"
    } elseif {$option == "oprestrict"} {
      chanset $chan $option $value
      notice $nick $handle "Setting for '$optionmsg' now set to $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to $value"
      }
    } elseif {$option == "mode" && (![isnum $value] || $value < "0" || [string match *.* $value])} {
      notice $nick $handle "Invalid request: $value"
    } elseif {$option == "mode" && [level $handle $chan] < [lindex [changet $chan modelock] 0]} {
      notice $nick $handle "The current level of [lindex [changet $chan modelock] 0] for $optionmsg exceeds your level of [level $handle $chan]"
    } elseif {$option == "mode" && [level $handle $chan] < $value} {
      notice $nick $handle "Invalid request: Can't set a level higher than your own"
    } elseif {$option == "mode" && [lindex $text 2] == ""} {
      notice $nick $handle "Invalid request: Where are the modes?"
    } elseif {$option == "mode"} {
      set cnt 1
      foreach mode [split [lindex [getchanmode $chan] 0] ""] {
        if {$mode == "+"} {
          continue
        } elseif {[ismode $mode two]} {
          if {$mode == "k"} {
            channel set $chan need-key ""
          }
          pushmode $chan -$mode [lindex [getchanmode $chan] $cnt]
          incr cnt 1
        } else {
          pushmode $chan -$mode
        }
      }
      flushmode $chan
      set cnt 3
      set m +
      set mp ""
      set mn ""
      set mo ""
      foreach mode [split [lindex $text 2] ""] {
        if {$mode == "+"} {
          set m +
        } elseif {$mode == "-"} {
          set m -
        } elseif {[ismode $mode user]} {
          continue
        } elseif {$m == "+"} {
          if {[ismode $mode two]} {
            if {$mode == "k"} {
              channel set $chan need-key "putserv \"JOIN $chan [lindex $text $cnt]\""
            }
            if {[lindex $text $cnt] != ""} {
              pushmode $chan +$mode [lindex $text $cnt]
              set mp $mp$mode
              set mo [lindex $text $cnt]
            }
            incr cnt 1
          } else {
            set mp $mp$mode
            pushmode $chan +$mode
          }
        } elseif {$m == "-"} {
          set mn $mn$mode
        }
      }
      chanset $chan modelock "$value +$mp-$mn $mo"
      notice $nick $handle "Setting for '$optionmsg' now set to [lrange [changet $chan modelock] 1 end] to level $value for $chan"
      if {[changet $chan tellset]} {
        noteownersend $chan "($handle) $nick!$uhost changes setting $optionmsg on $chan to [lrange [changet $chan modelock] 1 end]"
      }
    } else {
      notice $nick $handle "Invalid request: $value"
    }
    putcmdlog "> !$handle! ($nick!$uhost) SET\[$type\] ($chan): $text"
  }
}


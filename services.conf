###########################################################################
###        Services Tcl v3.0 [Sun Oct 09 12:07:57 2016] 'damian'        ###
####          damian@damian.id.au https://github.com/damiankw          ####
####                 The end before the new beginning.                 ####
 #########################################################################
### Configuration [general settings etc.]:                              ###
#### As with the last version, all of the configuration needed with    ####
#### the Tcl is below. I have re-written a couple of the captions as   ####
#### some people could not understand the ones originally created. I   ####
#### that they are more user-friendly this time around. Please note    ####
#### the configuration file, and settings files are not compatable     ####
#### with previous versions of the script, so you will need to rewrite ####
#### this file, or simple copy your old settings in, as there are more ####
#### settings in this version. Remember! You must remove your old      ####
#### 'set(set.file)' file from your 'set(data.dir)' directory before   ####
#### running the script, else it may not work correctly.               ####
##                                                                       ##
#                                                                         #

# - set(cmd) -> the  prefix  letter(s)  that  you  want  to  start  off the
#   commands with. eg: on AustNet ChanOP is prefixed with '`' (`op, `voice)
#   but doing that may clash with Services, so maybe '+' is better? :)
set set(cmd) ""

# - set(owner) -> the  default  owner of the channel. if you want more then
#   owner  here,  seperate  with  a  space, please note that the report log
#   (sent every 24 hours) will send the note to the first owner only.
set set(owner) ""

# - set(password) -> the  'nickserv'  password  for services, if this isn't
#   set and the Nickname Service asks for authentication, it will complain.
set set(nickpass) ""

# - set(adminpass) -> the  administrator password used primarily for adding
#   yourself to a channel (using /msg addme), without setting this password
#   the script will pretty much be useless.
set set(adminpass) ""

# - set(channels) -> the  channels  you  want the bot to supervise. you can
#   add/remove/disable  these  channels later with the '.mainchan' command,
#   so  you will be able to set this to "" for the time being until you get
#   the bot up and going properly.
set set(channels) ""

# - set(homechan) -> the  channel  you  want  notes to be sent to. when the
#   bot  adds  a  new user, removes users, comes up with errors or anything
#   similar it  will  message  this  channel (note: this channel may become
#   quite  flooded  with  text from the bot) [if you set the set(report) to 
#   '0', this channel is nulled out for everything]
set set(homechan) ""

# - set(report) -> the  type  of reporting you want the bot to produce. You
#   can  choose  to  have  it  report  things into the home channel, or not 
#   report  anything.  Set  this to '0' to disable the reporting, or '1' to 
#   enable the reporting.
set set(report) ""

# - set(backup) -> if your bot will be running in a channel as a backup bot
#   for  another bot, you would set this to the main channel bots nickname.
#   if  you  have  multiple backup bots, you would set all of the proceding 
#   bot nicknames into this variable; "main firstbackup second backup" etc.
set set(backup) ""

# - set(maxhosts) -> maximum  number  of  hosts allowed in the database. on
#   AustNet  'NoteOP'  restricts  your  hosts so you dont get caught having
#   everybody's  host  address,  the same applies here, if everyone has the
#   same  host  added to the eggdrop they will be called the same handle so
# you need to get people to clean their hosts out every now and then.
set set(maxhosts) ""

# - set(mail.name) -> the  'real  name' that is sent when sending logfiles.
#   you  can  pretty much set this to anything you want, try not to include
#   {[]}'s in there unless you know how to use them correctly :)
set set(mail.name) ""

# - set(mail.addr) -> your 'services' email address (it will work as a fake
#   one  most of the time ;P). just set this to whatever you want to appear
#   as the email address when sending logfiles.
set set(mail.addr) ""

# - set(mail.serv) -> the  smtp mail server you are running through to send
#   your logfiles for channels.
set set(mail.serv) ""

# - set(autoadd) -> default  setting on adduser in a channel. this has four
#   seperate  settings  in  it, the first is for the level, second for aop,
#   third  for  aov,  fourth  for protect of a channel user. the first is a
#   level  and  the  last ones are on/off switches, set them as 1 = on, 0 =
#   off. the closest to default for AustNet's ChanOP would be '100 1 0 0'
set set(autoadd) ""

# - set(data.dir) -> the  directory that all of the settings files go, from
#   the  channel main settings to the users notes from the note system, you
#   must have this directory made before running the services tcl.
set set(data.dir) ""

# - set(script.dir) -> the  directory  that all of the .etcl files go. this
#   channel  is  the  channel with every script listed below is in, if they
#   are in different directories move them!
set set(script.dir) ""

# - set(set.file) -> the  main  settings  data file. this is basically just
#   the  filename  of the file that all of these configuration settings are
#   stored in. after starting the script this configuration file is useless
#   for changing these settings. this file is stored in the data directory.
set set(set.file) ""

# - set(quickban.file) -> the file all of the -quickban options for the ban
#   command.  if  this file isnt speicified you will not be able to use the
#   quickban function correctly, it will just ban without the proper
#   reason. this file is stored in the data directory.
set set(quickban.file) ""

# - set(topics.file) -> the file all of the topics for +topic is in. if you
#   dont  specify  a  topic  when  you use the topic command it will read a
#   random line from this file. this file is stored in the data directory.
set set(topics.file) ""

# - set(8ball.file) -> the  answers  file  for the +8ball command. when you
#   use the 8ball command, the answers all come out of this file. this file
#   is stored in the data directory.
set set(8ball.file) ""

# - set(mimic.file) -> the  people  your  bot  is  able  to mimic (with the
#   +mimic command). these should be set as 'nick==what bot says', each one
#   on a new line. without this file you wont be able to mimic anyone. this
#   file is stored in the data directory.
set set(mimic.file) ""

# - set(nickop) -> the  Nickname  Service  on  the  network.  if there is a
#   nickname  service (eg. NickOP or NickServ) this is the nickname that it
#   uses for all the commands like set, and to notice for authentication.
set set(nickop) ""

# - set(nickopi) -> the  Nickname  Service  authenticator.  if  there  is a
#   nickname  service  on your network (eg. NickOP or NickServ) this is the
#   nickname the bot uses to authenticate (AustNet uses NickOP@AustNet.org)
set set(nickopi) ""

# - set(chanop) -> the  Chanserv  Service  nickname.  if you have a channel
#   service  on  your  network  (eg.  ChanOP  or  ChanServ) set this to its
#   nickname, it will stop from conflicts with services.
set set(chanop) ""

# - set(noteop) -> the Memoserv Service nickname. if there is a memoservice
#   or note system (eg. NoteOP or Memoserv) set this to its nickname. NOTE:
#   the  NoteOP  feature  is  made  for AustNet Services only, it may cause
#   problems with other networks
set set(noteop) ""

# - set(servermode) -> the  mode the bot sets when it connects to a server, 
#   this  should be set to whatever you put into your eggdrop configuration
#   file to make things easier to understand for you newbies.
set set(servermode) ""

# - set(chanmode) -> every  channel  mode  on  your  network  that  doesn't
#   require there to be any other arguments apart from the mode itself. eg;
#   m (moderated), i (invite only), s (secret), n (no external messages)
set set(chanmode) ""

# - set(twomode) -> every  channel mode on your network that needs at least
#   one  extra  argument  after  it, these arguments must not be to do with
#   nicknames. eg; l (limit), k (key)
set set(twomode) ""

# - set(usermode) -> every  channel mode on your network that has something
#   to  do  with nicknames, whether this be banning, or a normal user mode.
#   eg; o (op), v (voice), h (help/halfop), b (ban)
set set(usermode) ""

# - set(sockcommand) -> the setting that tells if the bot should use socket
#   authentication  and  commands  as apposed to server authentication. You
#   will  need to send the 'botcommand' scripts around to use this feature.
#   Sets to '0' for off, '1' for on.
set set(sockcommand) ""

# - set(listenport) -> the  listening  port  for  the  socket commands with
#   authentication  and commands. Set this to the port of your choice to be
#   used with the 'botcommand' scripts.
set set(listenport) ""

# - set(*.file) -> the  following four files do pretty much the same thing.
#   that  is  to add your own small, basic scripting to a few parts of this
#   script.   Unfortunately  your  scripting  can  only  be  one  line  per
#   statement,  as  you  will  see  when  you look inside the ones that are
#   pre-made  with  this  script.
#   - auth.file = for when people authenticate.
#   - deauth.file = for when people deauthenticate.
#   - adduser.file = for when a user gets added to a channel.
#   - deluser.file = for when a user gets removed from a channel.
#   these files are stored in the data directory.
set set(auth.file) ""
set set(deauth.file) ""
set set(adduser.file) ""
set set(deluser.file) ""

# - set(banmask) -> the  default  banmask  you  want  to  use with the +ban
#   command.  There  are  four  different  flags you can use here, they all
#   represent  a  different  part  of  a users full address. 'n' - nickname
#   (nick!). 'u' - username (!username@). 'h' - hostname (@hostname). 'o' -
#   origin (@*.isp.com). Default for this is 'uo' for *!username@*.isp.com.
#   NOTE: 'h' rules of 'o'.
set set(banmask) ""


# If you change anything below this line, the script will stuff itself and not work.
if {[info exists timezone]} {
  set set(timezone) $timezone
} else {
  set set(timezone) ""
}
set set(version) "2.2 20030609"

if {![file isdir $set(script.dir)]} {
  putlog ">> FATAL ERROR: script directory could not be found, and could not be created."
  return
}

if {![file isdir $set(data.dir)]} {
  putlog "> Unable to locate data directory ($set(data.dir)) - attempting to create"
  if {[catch [file mkdir $set(data.dir)]]} {
    putlog ">> FATAL ERROR: data directory could not be found, and could not be created."
    return
  }
}

putlog "> Loading script files..."
source $set(script.dir)/8ball.etcl
source $set(script.dir)/access.etcl
source $set(script.dir)/addme.etcl
source $set(script.dir)/adduser.etcl
source $set(script.dir)/auth.etcl
source $set(script.dir)/ban.etcl
source $set(script.dir)/clean.etcl
source $set(script.dir)/clist.etcl
source $set(script.dir)/commands.etcl
source $set(script.dir)/comset.etcl
source $set(script.dir)/delme.etcl
source $set(script.dir)/deluser.etcl
source $set(script.dir)/deop.etcl
source $set(script.dir)/devoice.etcl
source $set(script.dir)/fun.etcl
source $set(script.dir)/homechan.etcl
source $set(script.dir)/host.etcl
source $set(script.dir)/info.etcl
source $set(script.dir)/invite.etcl
source $set(script.dir)/kick.etcl
source $set(script.dir)/listban.etcl
source $set(script.dir)/logsend.etcl
source $set(script.dir)/main.etcl
source $set(script.dir)/mainchan.etcl
source $set(script.dir)/mdeop.etcl
source $set(script.dir)/mdevoice.etcl
source $set(script.dir)/mimic.etcl
source $set(script.dir)/note.etcl
source $set(script.dir)/op.etcl
source $set(script.dir)/procedures.etcl
source $set(script.dir)/resetdb.etcl
source $set(script.dir)/seek.etcl
source $set(script.dir)/services.etcl
source $set(script.dir)/set.etcl
source $set(script.dir)/setinfo.etcl
source $set(script.dir)/setme.etcl
source $set(script.dir)/setuser.etcl
source $set(script.dir)/socket.etcl
source $set(script.dir)/topic.etcl
source $set(script.dir)/unban.etcl
source $set(script.dir)/voice.etcl

if {[startup_options] == "error"} {
  putlog "> Services could not be loaded successfully..."
} else {
  putlog "> Services [lindex v$set(version) 0] loaded successfully..."
}

###
# Usage: /msg botnick mdevoice [<channel>]
###

### MDEVOICE:
bind msg - mdevoice {msg_error msg_mdevoice}
bind pub - $set(cmd)mdevoice {pub_error pub_mdevoice}

### CHANNEL:
proc pub_mdevoice {nick uhost handle chan text} {
  if {[validuser $handle]} {
    all_mdevoice c $nick $uhost $handle $chan $text
  }
}

### QUERY:
proc msg_mdevoice {nick uhost handle text} {
  if {![validuser $handle]} {
    return
  } elseif {[lindex $text 0] == ""} {
    notice $nick $handle "Invalid request: Wheres the channel name?"
  } elseif {![string match #* [lindex $text 0]]} {
    notice $nick $handle "Invalid request: [lindex $text 0] is not a channel"
  } else {
    all_mdevoice m $nick $uhost $handle [lindex $text 0] [lrange $text 1 end]
  }
}

### MAIN:
proc all_mdevoice {type nick uhost handle chan text} {
  global set botnick
  chan_settings mdevoice $type $nick $uhost $handle $chan $text
  if {![auth_check $nick $uhost $handle $chan] || [level $handle $chan] == "0"} {
    return
  } elseif {![validchan $chan]} {
    notice $nick $handle "Invalid request: $chan is not a valid channel"
  } elseif {[string tolower $type] == "c" && [chaninfo $chan nochanmsg]} {
    notice $nick $handle "`commands have been disabled for $chan"
  } elseif {[level $handle $chan] < [readfile $set(script.dir)/$set(com.file) mdevoice]} {
    notice $nick $handle "Your level of [level $handle $chan] is less then the required [readfile $set(script.dir)/$set(com.file) mdevoice] for this command"
  } elseif {![botisop $chan]} {
    notice $nick $handle "I am not currently an operator in $chan."
    putlog "> \[ERROR\] !$handle! ($nick!$uhost) i need operator status for mdevoice"
  } else {
    msg $chan "MassDevoice requested by $nick"
    foreach n [chanlist $chan] {
      if {[isvoice $n $chan]} {
        pushmode $chan -v $n
      }
    }
    putcmdlog "> !$handle! ($nick!$uhost) MDEVOICE\[$type\] ($chan)"
  }
}
